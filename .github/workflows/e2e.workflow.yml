name: Deploy to dev Workflow

on:
  issue_comment:
    types: [created]

jobs:
  deploy-to-dev:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '/dev')
    strategy:
      matrix:
        node-version: [16.x]
  
    steps:

      - name: Get PR context
        uses: actions/github-script@v3
        id: get-pr-context
        with:
          github-token: ${{ secrets.CI_USER_GIT_TOKEN }}
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.pulls.get(request)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }


      - name: Set Environment Variables
        env:
          GITHUB_COMMENT: ${{github.event.comment.body}}
        id: set-environment-variables
        run: |
          echo "GITHUB_COMMENT is: $GITHUB_COMMENT"
          for i in $GITHUB_COMMENT
          do
            if [[ ${i} =~ ^env\=.* ]]
            then
              env=$(echo $i | awk -F '=' '{print $2}')
            fi
            # if [[ ${i} =~ ^branch\=.* ]]
            # then
            #   branch=$(echo $i | awk -F '=' '{print $2}')
            # fi
            if [[ ${i} =~ ^rune2e\=.* ]]
            then
              rune2e=$(echo $i | awk -F '=' '{print $2}')
            fi
          done
          echo "env: $env"
          echo "::set-output name=env::${env}"
          echo "rune2e: $rune2e"
          echo "::set-output name=rune2e::${rune2e}"
          echo "repoName: $(basename ${{ github.repository }})"
          echo "::set-output name=repoName::$(basename ${{ github.repository }})"
          echo "repoOwner: ${{ github.repository_owner }}"
          echo "::set-output name=repoOwner::${{ github.repository_owner }}"
          echo "prNumber: ${{ github.event.pull_request.number }}"
          echo "::set-output name=prNumber::${{ github.event.pull_request.number }}"
          
      - name: Create Check Run
        uses: actions/github-script@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const createCheckRunResponse = await github.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head_sha: context.sha,
              name: 'Your Check Run Name',
              status: 'in_progress',
              started_at: new Date().toISOString(),
            });

            core.setOutput('check-run-id', createCheckRunResponse.data.id);
            
      - name: Run e2e
        if: steps.set-environment-variables.outputs.rune2e
        env:
          env: ${{steps.set-environment-variables.outputs.env}}
          repoName: ${{steps.set-environment-variables.outputs.repoName}}
          repoOwner: ${{steps.set-environment-variables.outputs.repoOwner}}
          prNumber: ${{steps.set-environment-variables.outputs.prNumber}}
          checkRunId: ${{steps.set-environment-variables.outputs.checkRunId}}
        run: |
              curl --location 'https://r0r15y31o5.execute-api.us-west-1.amazonaws.com/dev-01/e2e/gitstream_scenario' \
              --header 'Content-Type: application/json' \
              --data '{
                "scenarioContext": {
                  "title": "'"${env}"'",
                  "notifyStatus": {
                    "pr": {
                      "org": "'"${repoOwner}"'",
                      "repo": "'"${repoName}"'",
                      "pr": "'"${prNumber}"'",
                      "checkName": "Run e2e"
                    },
                    "slack": {
                      "channel": ""
                    }
                  }
                }
              }'
